{"version":3,"file":"index.js","mappings":"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","sources":["webpack://custom-block-attributes/external window \"React\"","webpack://custom-block-attributes/external window [\"wp\",\"blockEditor\"]","webpack://custom-block-attributes/external window [\"wp\",\"components\"]","webpack://custom-block-attributes/external window [\"wp\",\"compose\"]","webpack://custom-block-attributes/external window [\"wp\",\"element\"]","webpack://custom-block-attributes/external window [\"wp\",\"hooks\"]","webpack://custom-block-attributes/webpack/bootstrap","webpack://custom-block-attributes/webpack/runtime/compat get default export","webpack://custom-block-attributes/webpack/runtime/define property getters","webpack://custom-block-attributes/webpack/runtime/hasOwnProperty shorthand","webpack://custom-block-attributes/webpack/runtime/make namespace object","webpack://custom-block-attributes/./src/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, Button, TextControl } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\n// Register the dataAttributes for all blocks\naddFilter(\n    'blocks.registerBlockType',\n    'custom-block-attributes/add-attributes',\n    (settings) => {\n        // Store the original save function\n        const originalSave = settings.save;\n\n        // Create a new save function that wraps the original\n        settings.save = (props) => {\n            // Get the original save element\n            const element = originalSave(props);\n            \n            if (!element || !props.attributes.dataAttributes || props.attributes.dataAttributes.length === 0) {\n                return element;\n            }\n            \n            // Clone the element to avoid modifying the original\n            const newElement = { ...element };\n            \n            // Make sure props exists\n            if (!newElement.props) {\n                newElement.props = {};\n            }\n            \n            // Add data attributes to the props\n            props.attributes.dataAttributes.forEach(attr => {\n                if (attr.name && attr.value) {\n                    newElement.props[`data-${attr.name}`] = attr.value;\n                }\n            });\n            \n            return newElement;\n        };\n\n        // Add the dataAttributes attribute to all blocks\n        settings.attributes = {\n            ...settings.attributes,\n            dataAttributes: {\n                type: 'array',\n                default: [],\n            },\n        };\n\n        // Add support for custom attributes\n        settings.supports = {\n            ...settings.supports,\n            customClassName: true,\n            html: true,\n        };\n\n        return settings;\n    }\n);\n\n// We can remove this filter since we're handling it in the save function now\n// addFilter(\n//     'blocks.getSaveContent.extraProps',\n//     'custom-block-attributes/save-props',\n//     (extraProps, blockType, attributes) => {\n//         if (attributes.dataAttributes && attributes.dataAttributes.length > 0) {\n//             attributes.dataAttributes.forEach(attr => {\n//                 if (attr.name && attr.value) {\n//                     extraProps[`data-${attr.name}`] = attr.value;\n//                 }\n//             });\n//         }\n//         return extraProps;\n//     }\n// );\n\n// Higher order component to add custom inspector controls\nconst withCustomAttributes = createHigherOrderComponent((BlockEdit) => {\n    return (props) => {\n        const { attributes, setAttributes } = props;\n        const [newAttrName, setNewAttrName] = useState('');\n        const [newAttrValue, setNewAttrValue] = useState('');\n\n        // Initialize dataAttributes if it doesn't exist\n        const dataAttributes = attributes.dataAttributes || [];\n\n        const addAttribute = () => {\n            if (!newAttrName) return;\n\n            const newAttributes = [\n                ...dataAttributes,\n                {\n                    name: newAttrName,\n                    value: newAttrValue\n                }\n            ];\n\n            setAttributes({ dataAttributes: newAttributes });\n            setNewAttrName('');\n            setNewAttrValue('');\n        };\n\n        const removeAttribute = (index) => {\n            const newAttributes = dataAttributes.filter((_, i) => i !== index);\n            setAttributes({ dataAttributes: newAttributes });\n        };\n\n        return (\n            <>\n                <BlockEdit {...props} />\n                <InspectorControls>\n                    <PanelBody\n                        title=\"Custom Data Attributes\"\n                        initialOpen={false}\n                    >\n                        {/* Display existing attributes */}\n                        {dataAttributes && dataAttributes.length > 0 ? (\n                            dataAttributes.map((attr, index) => (\n                                <div key={index} style={{ marginBottom: '10px' }}>\n                                    <div>\n                                        data-{attr.name}: {attr.value}\n                                        <Button\n                                            isDestructive\n                                            onClick={() => removeAttribute(index)}\n                                            style={{ marginLeft: '10px' }}\n                                        >\n                                            Remove\n                                        </Button>\n                                    </div>\n                                </div>\n                            ))\n                        ) : (\n                            <p>No custom attributes added yet.</p>\n                        )}\n\n                        {/* Add new attribute form */}\n                        <TextControl\n                            label=\"Attribute Name\"\n                            value={newAttrName}\n                            onChange={setNewAttrName}\n                            placeholder=\"Enter attribute name\"\n                        />\n                        <TextControl\n                            label=\"Attribute Value\"\n                            value={newAttrValue}\n                            onChange={setNewAttrValue}\n                            placeholder=\"Enter attribute value\"\n                        />\n                        <Button\n                            isPrimary\n                            onClick={addAttribute}\n                            disabled={!newAttrName}\n                        >\n                            Add Attribute\n                        </Button>\n                    </PanelBody>\n                </InspectorControls>\n            </>\n        );\n    };\n}, 'withCustomAttributes');\n\n// Add our custom attributes panel to all blocks\naddFilter(\n    'editor.BlockEdit',\n    'custom-block-attributes/with-custom-attributes',\n    withCustomAttributes\n); "],"names":["addFilter","createHigherOrderComponent","InspectorControls","PanelBody","Button","TextControl","useState","settings","originalSave","save","props","element","attributes","dataAttributes","length","newElement","forEach","attr","name","value","type","default","supports","customClassName","html","withCustomAttributes","BlockEdit","setAttributes","newAttrName","setNewAttrName","newAttrValue","setNewAttrValue","addAttribute","newAttributes","removeAttribute","index","filter","_","i","createElement","Fragment","title","initialOpen","map","key","style","marginBottom","isDestructive","onClick","marginLeft","label","onChange","placeholder","isPrimary","disabled"],"sourceRoot":""}